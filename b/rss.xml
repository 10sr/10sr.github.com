<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>10sr.github.io/b</title><link>https://10sr.github.io/b</link><description>10sr public Nikola</description><atom:link href="https://10sr.github.io/b/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2019 &lt;a href="mailto:8.slashes@gmail.com"&gt;&lt;/a&gt; </copyright><lastBuildDate>Fri, 14 Jun 2019 03:59:17 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Post with date path</title><link>https://10sr.github.io/b/posts/20190614/post-with-date-path.html</link><description>&lt;p&gt;Postwithdatepath.&lt;/p&gt;</description><guid>https://10sr.github.io/b/posts/20190614/post-with-date-path.html</guid><pubDate>Fri, 14 Jun 2019 03:57:05 GMT</pubDate></item><item><title>hexyl</title><link>https://10sr.github.io/b/posts/hexyl.html</link><description>&lt;div&gt;&lt;p&gt;Hexyl がべんり&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/sharkdp/hexyl"&gt;https://github.com/sharkdp/hexyl&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;brew install hexyl
&lt;/pre&gt;&lt;/div&gt;</description><guid>https://10sr.github.io/b/posts/hexyl.html</guid><pubDate>Fri, 14 Jun 2019 02:43:43 GMT</pubDate></item><item><title>Test of Metadata</title><link>https://10sr.github.io/b/posts/meta-test.html</link><description>&lt;div&gt;&lt;p&gt;Write your post here.&lt;/p&gt;
&lt;p&gt;date のタイムゾーンがおかしい UTC+09:00 ってなに&lt;/p&gt;&lt;/div&gt;</description><guid>https://10sr.github.io/b/posts/meta-test.html</guid><pubDate>Fri, 05 Apr 2019 05:26:37 GMT</pubDate></item><item><title>mdtest</title><link>https://10sr.github.io/b/posts/mdtest.html</link><description>&lt;div&gt;&lt;p&gt;Write your post here.&lt;/p&gt;
&lt;p&gt;Markdown test.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;a&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><guid>https://10sr.github.io/b/posts/mdtest.html</guid><pubDate>Fri, 05 Apr 2019 05:02:50 GMT</pubDate></item><item><title>newpost</title><link>https://10sr.github.io/b/posts/newpost.html</link><description>&lt;div&gt;&lt;p&gt;Write your post here.&lt;/p&gt;
&lt;p&gt;AAAAA.
bbbbb.&lt;/p&gt;&lt;/div&gt;</description><guid>https://10sr.github.io/b/posts/newpost.html</guid><pubDate>Fri, 05 Apr 2019 04:04:14 GMT</pubDate></item><item><title>Long Markdown test</title><link>https://10sr.github.io/b/posts/lmt.html</link><description>&lt;div&gt;&lt;p&gt;こんにちは、 &lt;a href="https://github.com/editorconfig/editorconfig-emacs/graphs/contributors"&gt;EditorConfig Emacs Plugin をつくっています&lt;/a&gt; 。&lt;/p&gt;
&lt;h3&gt;この文章はなに？&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://editorconfig.org"&gt;EditorConfig&lt;/a&gt; を書くとき・使うときに知っておくとべんりかもしれない細かな話を備忘録的につらつらと書いておくものです。
順番は適当ですが、下に行くほどどうでもいい情報かもしれません。&lt;/p&gt;
&lt;p&gt;ここに書かれていることは、実のところほとんどドキュメント化されているわけではありません。
ただし、 &lt;code&gt;.editorconfig&lt;/code&gt; ファイルが正しく解釈されるかをテストする &lt;a href="https://github.com/editorconfig/editorconfig-core-test"&gt;editorconfig-core-test&lt;/a&gt; の中ですべて明示されていることなので、よほどのことがない限り変わらないんじゃないかなあと思います。&lt;/p&gt;
&lt;p&gt;この文章では、 EditorConfig の基本的な目的・使い方については説明しません。
&lt;a href="http://editorconfig.org"&gt;公式ドキュメント&lt;/a&gt; や、 &lt;a href="http://qiita.com/tags/EditorConfig"&gt;EditorConfig タグ&lt;/a&gt; などをいい感じに参照してください。&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;editorconfig&lt;/code&gt; コマンドの使い方&lt;/h3&gt;
&lt;h4&gt;独自なプロパティ定義&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;editorconfig&lt;/code&gt; コマンドはサポートされている設定のみしか扱えないというわけではないので、 &lt;code&gt;.editorconfig&lt;/code&gt; ファイルには好きな設定名と値のペアを追加することができます。&lt;/p&gt;
&lt;p&gt;例えば、 &lt;code&gt;/path/to/repo/.editorconfig&lt;/code&gt; に&lt;/p&gt;
&lt;p&gt;```ini:/path/to/repo/.editorconfig
[*.js]
indent_style = space
key0 = value0&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;と書いたうえで、 `editorconfig /path/to/repo/a.js` を実行すると、この二つの設定値を得ることができます。

```console
~ $ editorconfig /path/to/repo/a.js
indent_style=space
key0=value0
&lt;/pre&gt;


&lt;p&gt;これを利用して、独自に設定を定義し利用するようなコマンドやエディタ拡張を書くことができると思います。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;例えば、 &lt;a href="https://github.com/dotnet/roslyn/blob/master/.editorconfig"&gt;dotnet/roslyn&lt;/a&gt; では、  &lt;code&gt;dotnet_&lt;/code&gt; &lt;code&gt;csharp_&lt;/code&gt; から始まる独自のプロパティを設定し利用しています&lt;/li&gt;
&lt;li&gt;同様に、 &lt;a href="https://github.com/Hackerpilot/dfmt"&gt;dfmt&lt;/a&gt; というツールは、独自に &lt;code&gt;dfmt_&lt;/code&gt; から始まる設定を定義しコマンドから利用しています&lt;/li&gt;
&lt;li&gt;また、例えば Emacs Plugin では、 &lt;code&gt;editorconfig-custom-hooks&lt;/code&gt; に関数を追加することで独自に定義した設定値を利用することができます。これを利用した拡張の例のようなものとして、 &lt;a href="https://github.com/10sr/editorconfig-custom-majormode-el"&gt;editorconfig-custom-majormode&lt;/a&gt; を以前作りました。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;逆に、設定名を typo しても気づかない（エラーを吐いたりしない）ので気をつけてください。&lt;/p&gt;
&lt;h4&gt;出力時の値の書き換え&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;editorconfig&lt;/code&gt; コマンドは、基本的には &lt;code&gt;.editorconfig&lt;/code&gt; に記述された設定値をそのまま素通しして出力しますが、いくつかの微妙な加工を行う場合があります。&lt;/p&gt;
&lt;p&gt;まず、値の名前はすべて downcase されます。&lt;/p&gt;
&lt;p&gt;```ini:/path/to/repo/.editorconfig
[*.js]
Indent_Size = 4
FOO = BAR&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;```console
~ $ editorconfig /path/to/repo/a.js
indent_size=4
foo=BAR
&lt;/pre&gt;


&lt;p&gt;また、公式でドキュメントされている設定のうち、真偽値 (true, false) を取るものについては、コマンド実行時にその値がすべて小文字に downcase されます。&lt;/p&gt;
&lt;p&gt;```ini:/path/to/repo/.editorconfig
[*.js]
trim_trailing_whitespace = TRUE
insert_final_newline = trUe&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;```console
~ $ editorconfig /path/to/repo/a.js
trim_trailing_whitespace=true
insert_final_newline=true
&lt;/pre&gt;


&lt;p&gt;インデント幅に関する設定には、少し複雑なルールが存在します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;indent_size = tab&lt;/code&gt; であり、 &lt;code&gt;tab_width&lt;/code&gt; に値が設定されている場合、 &lt;code&gt;indent_size&lt;/code&gt; を &lt;code&gt;tab_width&lt;/code&gt; と同じ値に設定します&lt;/li&gt;
&lt;li&gt;&lt;code&gt;indent_size&lt;/code&gt; に数字が設定されていて &lt;code&gt;tab_width&lt;/code&gt; が設定されていない場合、 &lt;code&gt;tab_width&lt;/code&gt; を &lt;code&gt;indent_size&lt;/code&gt; と同じ値に設定します&lt;/li&gt;
&lt;li&gt;&lt;code&gt;indent_size&lt;/code&gt; が設定されておらず、 &lt;code&gt;tab_width&lt;/code&gt; に値が設定されていて、 &lt;code&gt;indent_style = tab&lt;/code&gt; である場合、 &lt;code&gt;indent_size&lt;/code&gt; を &lt;code&gt;tab_width&lt;/code&gt; と同じ値に設定します&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ただし、実用上はユーザはこの仕様をあまり気にしなくても大丈夫だと思います。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;indent_style = space&lt;/code&gt; のときは、 &lt;code&gt;indent_size&lt;/code&gt; を適切に設定しましょう&lt;/li&gt;
&lt;li&gt;&lt;code&gt;indent_style = tab&lt;/code&gt; のときは、 &lt;code&gt;tab_width&lt;/code&gt; を適切に設定しましょう&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;code&gt;.editorconfig&lt;/code&gt; ファイルの書き方&lt;/h3&gt;
&lt;h4&gt;値の優先順位・値の削除&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;.editorconfig&lt;/code&gt; の値は、常に、上から下へ、親ディレクトリから子ディレクトリへと読み込まれ、後に定義された値が優先されます。&lt;/p&gt;
&lt;p&gt;CSS のように詳細に指定されたセクションのほうが優先されるみたいなルールはないので、 &lt;code&gt;*&lt;/code&gt; でマッチするルールは普通にファイルの先頭においておくことをオススメします。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;true&lt;/span&gt;

&lt;span class="k"&gt;[*]&lt;/span&gt;
&lt;span class="na"&gt;end_of_line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;lf&lt;/span&gt;
&lt;span class="na"&gt;trim_trailing_whitespace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;true&lt;/span&gt;
&lt;span class="na"&gt;insert_final_newline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;true&lt;/span&gt;

&lt;span class="k"&gt;[*.md]&lt;/span&gt;
&lt;span class="na"&gt;trim_trailing_whitespace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;false&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;場合によっては、上で定義されていた値を削除し、未定義に戻したい場合があると思います。&lt;/p&gt;
&lt;p&gt;このような場合、基本的には「その設定の値として正しくない値」を入れれば良いです（例えば、 &lt;code&gt;indent_size = none&lt;/code&gt; など）。&lt;/p&gt;
&lt;p&gt;ただ、このやり方だと、その値が何を意味するのか初見でわからない場合がもしかしたらあるかもしれない・その値があとから有効な値になるかもしれないというような感じの懸念があったため、値を未定義にするための値が（わりと最近？）定められました。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;unset&lt;/code&gt; がこの目的のために reserve されています。以下のように使うことができます。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;true&lt;/span&gt;

&lt;span class="k"&gt;[*]&lt;/span&gt;
&lt;span class="na"&gt;indent_style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;space&lt;/span&gt;
&lt;span class="na"&gt;indent_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;4&lt;/span&gt;

&lt;span class="k"&gt;[*.js]&lt;/span&gt;
&lt;span class="na"&gt;indent_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;unset&lt;/span&gt;
&lt;/pre&gt;


&lt;h4&gt;ファイル名のパターンマッチ&lt;/h4&gt;
&lt;p&gt;ファイル名のマッチには少しの独自拡張がされた Glob パターンマッチを用います。&lt;/p&gt;
&lt;p&gt;使用可能なパターンのリスト自体に関しては &lt;a href="http://editorconfig.org/#file-format-details"&gt;公式ページのドキュメント&lt;/a&gt; で尽くされているので参照してください。
&lt;code&gt;.gitignore&lt;/code&gt; で使われるのと似てる、と考えて良いです。&lt;/p&gt;
&lt;p&gt;一つ注意するといいこととして、マッチ時の動きとして、（これも &lt;code&gt;.gitignore&lt;/code&gt; と同様に）パターンに &lt;code&gt;/&lt;/code&gt; が入っているかどうかでマッチの方法が変化する、というものがあります。
この方式は &lt;a href="https://github.com/isaacs/node-glob#basename-matching"&gt;Basename Matching&lt;/a&gt; と呼ばれることがあるみたいです。&lt;/p&gt;
&lt;p&gt;まず、パターンの中に &lt;code&gt;/&lt;/code&gt; がない場合、マッチはファイルの Basename のみを対象として行われます。&lt;/p&gt;
&lt;p&gt;例えば、以下のようなパターンは、 &lt;code&gt;a.js&lt;/code&gt;, &lt;code&gt;lib/b.js&lt;/code&gt; の双方にマッチします。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[*.js]&lt;/span&gt;
&lt;span class="na"&gt;indent_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;2&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;一方、パターン中に &lt;code&gt;/&lt;/code&gt; が一つでも含まれる場合、 &lt;code&gt;.editorconfig&lt;/code&gt; ファイルからの相対パス全体に対するマッチが行われます。&lt;/p&gt;
&lt;p&gt;例えば、以下のように書くと、これは &lt;code&gt;.editorconfig&lt;/code&gt; ファイルが存在するのと同階層の &lt;code&gt;a.js&lt;/code&gt; などにしかマッチしません。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[/*.js]&lt;/span&gt;
&lt;span class="na"&gt;indent_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;2&lt;/span&gt;
&lt;/pre&gt;


&lt;h4&gt;コメント&lt;/h4&gt;
&lt;p&gt;基本的に、 &lt;code&gt;#&lt;/code&gt; または &lt;code&gt;;&lt;/code&gt; があるとそこから行末までがコメントとして扱われます。&lt;/p&gt;
&lt;p&gt;ただし、正確にはコメントとして解釈されるには加えて以下のどちらかが必要です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;この文字が行頭にある&lt;/li&gt;
&lt;li&gt;直前が半角スペースである&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;つまり、以下はコメントにはならず、値が &lt;code&gt;value# Not comment&lt;/code&gt; であると解釈されます。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[*.js]&lt;/span&gt;
&lt;span class="na"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;value# Not comment&lt;/span&gt;
&lt;/pre&gt;


&lt;h4&gt;値のセパレータ&lt;/h4&gt;
&lt;p&gt;値を定義するとき、通常は &lt;code&gt;key = value&lt;/code&gt; と書くと思います。
公式ページでも &lt;code&gt;=&lt;/code&gt; が使われています。
しかし、実はこの &lt;code&gt;=&lt;/code&gt; の代わりに、 &lt;code&gt;:&lt;/code&gt; を使うことができたりします。
しかも、 &lt;code&gt;=&lt;/code&gt; と &lt;code&gt;:&lt;/code&gt; が混在しても大丈夫です。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[*.py]&lt;/span&gt;
&lt;span class="na"&gt;indent_style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;space&lt;/span&gt;
&lt;span class="na"&gt;indent_size : 2&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;実際には普通に &lt;code&gt;=&lt;/code&gt; だけを使ったほうが良いと思います。&lt;/p&gt;&lt;/div&gt;</description><guid>https://10sr.github.io/b/posts/lmt.html</guid><pubDate>Fri, 08 Jun 2018 06:00:00 GMT</pubDate></item><item><title>Welcome to Nikola</title><link>https://10sr.github.io/b/posts/welcome-to-nikola.html</link><dc:creator>Roberto Alsina</dc:creator><description>&lt;div&gt;&lt;div class="figure"&gt;
&lt;a class="reference external image-reference" href="https://farm1.staticflickr.com/138/352972944_4f9d568680_z.jpg?zz=1"&gt;&lt;img alt="Nikola Tesla Corner by nicwest, on Flickr" class="thumbnail" src="https://farm1.staticflickr.com/138/352972944_4f9d568680.jpg"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;If you can see this in a web browser, it means you managed to install Nikola,
and build a site using it. Congratulations!&lt;/p&gt;
&lt;p&gt;Next steps:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://10sr.github.io/b/pages/handbook/"&gt;Read the manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://getnikola.com"&gt;Visit the Nikola website to learn more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://10sr.github.io/b/galleries/demo/"&gt;See a demo photo gallery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://10sr.github.io/b/pages/listings-demo/"&gt;See a demo listing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://10sr.github.io/b/pages/dr-nikolas-vendetta/"&gt;See a demo of a longer text&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Send feedback to &lt;a class="reference external" href="mailto:info@getnikola.com"&gt;info@getnikola.com&lt;/a&gt;!&lt;/p&gt;&lt;/div&gt;</description><category>blog</category><category>demo</category><category>nikola</category><category>python</category><guid>https://10sr.github.io/b/posts/welcome-to-nikola.html</guid><pubDate>Sat, 31 Mar 2012 02:00:00 GMT</pubDate></item></channel></rss>